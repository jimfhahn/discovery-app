$(document).ready(function() {

    // subclass BlacklightAlma
    function Franklin() {
        BlacklightAlma.call(this);
    }

    function constructAeonLink(mmsid, holding) {
        if(holding['link_to_aeon']) {
          return '<a href="/redir/aeon?bibid=' + mmsid + '&hldid=' + holding['holding_id'] + '" target="_blank">Request to View</a>';
        }

        return null;
    }

    Franklin.prototype = Object.create(BlacklightAlma.prototype);

    Franklin.prototype.formatHolding = function (mms_id, holding) {
        if (holding['inventory_type'] == 'physical') {
            var availability = "Unknown";
            if (holding['availability'] == 'check_holdings') {
                availability = "See availability details";
            } else if (holding['availability'] == 'unavailable') {
                availability = "Requestable";
            } else if (holding['availability'] == 'available') {
                availability = "Available";
            }
            // TODO: pass in format to shelfLocatorLink() somehow
            return [availability, holding['location'], holding['call_number'], $.shelfLocatorLink(mms_id, holding, "TODO"), constructAeonLink(mms_id, holding)]
                .filter(function (item) {
                    return item != null && item.length > 0;
                }).join(". ");
        } else if(holding['inventory_type'] == 'electronic') {

            if (holding['activation_status'] == 'Available') {
                var url = null;
                if (holding['portfolio_pid']) {
                    url = "https://<%= ENV['ALMA_DELIVERY_DOMAIN'] %>/view/uresolver/<%= ENV['ALMA_INSTITUTION_CODE'] %>/openurl?Force_direct=true&portfolio_pid=" +
                        holding['portfolio_pid'] + "&rfr_id=info%3Asid%2Fprimo.exlibrisgroup.com&u.ignore_date_coverage=true"
                }

                if (url !== null) {
                    var text = holding['collection'] || "Electronic resource";
                    url = '<a href="' + url + '">' + text + '</a>';
                } else {
                    url = "Electronic Resource (no URL available)";
                }

                return [url, holding['coverage_statement'], holding['public_note']]
                    .filter(function (item) {
                        return item != null && item.length > 0;
                    }).join(" - ");
            }

        } else {
            return BlacklightAlma.prototype.formatHolding.call(this, mms_id, holding);
        }
    };

    Franklin.prototype.renderAvailability = function (element, html) {
      // if there's no availability text at all, then hide the field label altogether
      if(html && html.length > 0) {
          BlacklightAlma.prototype.renderAvailability.call(this, element, html);
      } else {
          $(element).closest(".document").find(".blacklight-availability").hide();
      }
    };

    Franklin.prototype.loadRequestOptionsAjax = function(mmsid) {
        var url = "/alma/single_availability?mmsid=" + encodeURIComponent(mmsid);
        console.log(url);
        $("#requestOptions").DataTable({
            "ajax": url,
            "columnDefs": [
                { "visible": false, "targets": 0 }
            ],
            "language": {
              "search": "Filter records:"
            },
            "drawCallback": function(settings) {
                var table = $('#requestOptions').DataTable();
                var pageSize = table.settings()[0]['_iDisplayLength'];
                var tableLen = table.data().length;
                tableLen > pageSize ? $('#requestOptions_filter').show() : $('#requestOptions_filter').hide();
            },
            "initComplete": function(settings, json) {
                dataLen = json.data.length;
                if(dataLen == 0) {
                    $('#requestOptions_wrapper').hide();
                }
            }
        });
    };

    Franklin.prototype.loadRequestOptions = function() {
        var mmsidList = $(".request-options-load").map(function (index, element) {
            return $(element).data("mmsid");
        }).get();

        mmsidList.forEach(function(mmsid) {
            Franklin.prototype.loadRequestOptionsAjax(mmsid);
        });
    };

    var ba = new Franklin();
    ba.loadAvailability();
    ba.loadRequestOptions();
});
